import { useState } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import { signIn } from "next-auth/react";
import Image from "next/image";
import { Skeleton } from "@/components/ui/skeleton";
import { Button } from "@/components/ui/button";

export default function SignInPage() {
  const router = useRouter();
  const { error } = router.query;
  const [isLoading, setIsLoading] = useState(false);

  const handleSignIn = async () => {
    if (isLoading) return;
    setIsLoading(true);
    try {
      await signIn("google", { callbackUrl: "/" });
    } catch (err) {
      await router.push("/auth/error");
      console.log(err);
      setIsLoading(false);
    }
  };

  return (
    <>
      <Head>
        <title>Sign-in</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative flex min-h-screen flex-col items-center justify-center bg-gray-800 p-12 text-white">
        <button
          onClick={() => router.push("/")}
          className="absolute left-4 top-4 flex items-center gap-2 text-white transition duration-300 hover:text-gray-300"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 16 16"
            fill="currentColor"
            className="h-4 w-4"
          >
            <path
              fillRule="evenodd"
              d="M14 8a.75.75 0 0 1-.75.75H4.56l3.22 3.22a.75.75 0 1 1-1.06 1.06l-4.5-4.5a.75.75 0 0 1 0-1.06l4.5-4.5a.75.75 0 0 1 1.06 1.06L4.56 7.25h8.69A.75.75 0 0 1 14 8Z"
              clipRule="evenodd"
            />
          </svg>
          <span className="text-base font-semibold">Back</span>
        </button>

        <div className="mb-6 text-center">
          <div>
            <h1 className="mb-2 text-4xl font-extrabold">Welcome</h1>
            <p className="mb-4 text-lg text-white/80">
              Please sign in to access your account
            </p>
          </div>
        </div>
        <div className="flex w-full flex-col gap-6 sm:w-96">
          <Button
            variant="secondary"
            onClick={handleSignIn}
            className={`${isLoading ? "cursor-not-allowed" : ""}`}
            disabled={isLoading}
          >
            {isLoading ? (
              <Skeleton>
                <h1>Loading...</h1>
              </Skeleton>
            ) : (
              <>
                <h1>Sign-in with Google</h1>
                <Image
                  width="20"
                  height="10"
                  src="https://authjs.dev/img/providers/google.svg"
                  alt="google icons"
                />
              </>
            )}
          </Button>
        </div>
        {error === "not-logged-in" && (
          <p className="mt-4 text-base text-red-500">
            You need to sign in first to access one token page page.
          </p>
        )}
      </main>
    </>
  );
}
